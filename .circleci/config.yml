version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.8
jobs:
  build:
    docker:
      - image: "circleci/node"
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            yarn install

      - save_cache:
          paths:
            - ./node_modules.
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: run tests
          command: |
            yarn run test

  deploy:
    docker:
      - image: "circleci/node"
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: install dependencies
          command: |
            yarn install

      - save_cache:
          paths:
            - ./node_modules.
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: build React app
          command: |
            CI=false yarn run build  # the CI flag here is because react-scripts treats any warning as a failing error during build

      # upload everything
      - aws-s3/copy:
          from: ./build/
          to: "s3://freefrom-compensation-dev"
          arguments: '--recursive --include="*" --exclude ".circleci*" --exclude ".git*" --exclude "*.json" --exclude "robots.txt" --exclude "index.html" --exclude "service-worker.js" --acl public-read --cache-control max-age=31536000,public'

      # override the cache settings for the root json files and robots.txt
      - aws-s3/copy:
          from: ./build/
          to: "s3://freefrom-compensation-dev"
          arguments: '--recursive --exclude="*" --include="*.json" --include="robots.txt" --acl public-read --cache-control max-age=60,public'

      # override the cache settings for index.html and service-worker.js
      - aws-s3/copy:
          from: ./build/
          to: "s3://freefrom-compensation-dev"
          arguments: '--recursive --exclude="*" --include "index.html" --include "service-worker.js" --acl public-read --cache-control max-age=0,private'

      # sync static images
      - aws-s3/copy:
          from: ./src/images/
          to: "s3://freefrom-compensation-dev/images/"
          arguments: "--recursive --acl public-read --cache-control max-age=3600,public"

      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"

workflows:
  version: 2
  deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
